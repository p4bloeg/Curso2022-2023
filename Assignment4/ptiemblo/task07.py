# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tV5j-DRcpPtoJGoMj8v2DSqR_9wyXeiE

**Task 07: Querying RDF(s)**
"""

#!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2020-2021/master/Assignment4"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/resources/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""
# TO DO

print("TASK 7.1")
from rdflib.plugins.sparql import prepareQuery

VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
ns = Namespace("http://somewhere#")

query = prepareQuery('''
    SELECT ?s
    WHERE{
        ?s rdfs:subClassOf ns:Person
    }
''', initNs={ "rdfs": RDFS, "ns" : ns})

# Visualize the results

print("RDFLIB:")
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s)

print("SPARQL:")
for r in g.query(query):
  print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**"""
# TO DO

print("TASK 7.2")
query2 = prepareQuery('''
  SELECT ?p
  WHERE { 
    {
    ?p rdf:type ns:Person.
    } UNION {
      ?s rdfs:subClassOf ns:Person.
      ?p rdf:type ?s
    } 
  }
  ''',initNs = {"rdfs": RDFS, "ns": ns}
)


# Visualize the results

print("RDFLIB:")
for s, p, o in g.triples((None, RDF.type, ns.Person)):
  print(s)
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s)

print("SPARQL:")
for r in g.query(query2):
  print(r)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**"""
# TO DO

print("TASK 7.3")
query3 = prepareQuery('''
  SELECT DISTINCT ?p ?prop ?c 
  WHERE { 
    ?sc rdfs:subClassOf* ns:Person .
    ?p <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?sc.
    ?p ?prop ?c.
  } 
  ''', initNs = {"ns": ns, "rdfs": RDFS})
# Visualize the results

print("RDFLIB:")
for s, p, o in g.triples((None, RDF.type, ns.Person)):
  for s1, p1, o1 in g.triples((s, None, None)):
    print(s1,p1,o1)
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s1, p1, o1 in g.triples((None, RDF.type, s)):
    for s2, p2, o2 in g.triples((s1, RDF.type, None)):
      print(s1,o2)

print("SPARQL:")
for r in g.query(query3):
    print(r)