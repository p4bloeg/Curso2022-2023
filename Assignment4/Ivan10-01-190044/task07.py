# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/FacultadInformatica-LinkedData/Curso2022-2023/blob/master/Assignment4/course_materials/notebooks/Task07.ipynb

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

ns = Namespace("http://somewhere#")
from rdflib.plugins.sparql import prepareQuery
q1 = prepareQuery('''
  SELECT 
    ?s
  WHERE { 
    ?s (rdfs:subClassOf/rdfs:subClassOf*) ns:Person. 
  }
  ''',
  initNs = { "rdfs": RDFS, "ns": ns}
)

for s,p,o in g.triples((None,RDFS.subClassOf,ns.Person)):
  print(s)
  for s1,p1,o1 in g.triples((None,RDFS.subClassOf,s)):
      print(s1)
for r in g.query(q1):
  print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

query2 = prepareQuery('''
SELECT ?i 
WHERE {
    {
        ?i rdf:type ns:Person .
    }
    UNION {
        ?sCl rdfs:subClassOf* ns:Person .
        ?i rdf:type ?sCl
    }
}
''',
initNs = {'rdfs':RDFS, 'ns':Namespace("http://somewhere#"), 'rdf':RDF}
)
print([res for res in g.query(query2)])
print('\n')

print([(s,p,o) for s,p,o in g.triples((None, RDF.type, ns.Person))])
print('\n')
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
    for s_1,p_1,o_1 in g.triples((None ,RDF.type, s)):
        print(s_1,p_1,o_1)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

for s, p, o in g.triples((None, RDF.type, ns.Person)):
  for a,b,c in g.triples((s, None, None)):
      print(a,b,c)

for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for a,b,c in g.triples((None, RDF.type, s)):
    for x,y,z in g.triples((a, None, None)):
      print(x,y,z)

q3 = prepareQuery('''
 SELECT ?Person ?Prop ?c
  WHERE {
   {
    ?Person rdf:type ns:Person.
    ?Person ?Prop ?c

  }UNION{ 
     ?Person rdf:type ?a.
     ?Person ?Prop ?c.
     ?a rdfs:subClassOf* ns:Person
   }
  }
  ''',
  initNs = { "ns": ns, "rdf": RDF, "rdfs": RDFS}
)

for a in g.query(q3):
  print(a)
