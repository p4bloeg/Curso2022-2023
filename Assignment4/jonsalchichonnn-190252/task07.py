# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19zEu7txGqKeBSV4O7gkUqIdmm39H_7-W

**Task 07: Querying RDF(s)**
"""

#!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

from rdflib.plugins.sparql import prepareQuery

# VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
NS = Namespace("http://somewhere#")

print("RDFLib")
for s,p,o in g.triples((None, RDFS.subClassOf, NS.Person)):
  print(s)
  for ss,pp,oo in g.triples((None, RDFS.subClassOf, s)):
    print(ss)

print("\nSPARQL")
q1 = prepareQuery('''
  SELECT ?Subject WHERE { 
    ?Subject rdfs:subClassOf+ ns:Person.
  }
  ''',
  initNs = { "rdfs": RDFS, "ns": NS}
)
for r in g.query(q1):
 print(r.Subject)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

print("RDFLib")
for s,p,o in g.triples((None, RDF.type, NS.Person)):
  print(s)

for s,p,o in g.triples((None, RDFS.subClassOf, NS.Person)):
  for sub, pro, obj in g.triples((None, RDF.type, s)):
    print(sub)

print("\nSPARQL")
q1 = prepareQuery('''
  SELECT ?Subject WHERE { 
    ?Class rdfs:subClassOf* ns:Person.
    ?Subject rdf:type ?Class.
  }
  ''',
  initNs = { "rdf": RDF,"rdfs": RDFS, "ns": NS}
)
for r in g.query(q1):
 print(r.Subject)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

print("RDFLib")
for s,p,o in g.triples((None, RDF.type, NS.Person)):
  for ss,pp,oo in g.triples((s, None, None)):
    print(ss, pp, oo)

for s,p,o in g.triples((None, RDFS.subClassOf, NS.Person)):
  for ss,pp,oo in g.triples((None, RDF.type, s)):
    for sss, ppp, ooo in g.triples((ss, None, None)):
      print(sss, ppp, ooo)

print("\nSPARQL")
q1 = prepareQuery('''
  SELECT ?Subject ?Property ?Class WHERE { 
    ?SubClass rdfs:subClassOf* ns:Person.
    ?Subject rdf:type ?SubClass.
    ?Subject ?Property ?Class.
  }
  ''',
  initNs = { "rdf": RDF,"rdfs": RDFS, "ns": NS}
)
for r in g.query(q1):
 print(r.Subject, r.Property, r.Class)