# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-NewS5mLTttxObCKDZRuHc7uKWRIisJB

**Task 07: Querying RDF(s)**
"""

github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

# TO DO
from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")
q1 = prepareQuery("""
    SELECT ?subclase WHERE{
    ?subclase rdfs:subClassOf ns:Person.
    }
""", initNs={"ns":ns})
# Visualize the results
print("RDFLib:")
for subclase, propiedad, valor in g.triples((None, RDFS.subClassOf, ns.Person)):
    print(subclase)
print("SPARQL:")
for r in g.query(q1):
    print(r.subclase)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
print("RDFLib:")
for persona, propiedad, valor in g.triples((None, RDF.type, ns.Person)):
    print(persona)
for subclase, propiedad, valor in g.triples((None, RDFS.subClassOf, ns.Person)):
    for persona,propiedad,valor in g.triples((None,RDF.type,subclase)):
        print(persona)

print("SPARQL:")
q2 = prepareQuery("""
    SELECT DISTINCT ?persona WHERE{
    {?persona rdf:type ns:Person.}
    UNION 
    {?valor rdfs:subClassOf* ns:Person.
    ?persona rdf:type ?valor.}
    }
""", initNs={"ns":ns})

# Visualize the results
for r in g.query(q2):
    print(r.persona)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# TO DO
print("USANDO RDFLib:")
for persona, propiedad, valor in g.triples((None, RDF.type, ns.Person)):
   for persona2, propiedad2, valor2 in g.triples((persona,None,None)):
       print(persona2,propiedad2)
for subclase, propiedad, valor in g.triples((None, RDFS.subClassOf, ns.Person)):
    for persona,propiedad,valor in g.triples((None,RDF.type,subclase)):
        for persona2, propiedad2, valor2 in g.triples((persona, None, None)):
            print(persona2, propiedad2)

print("USANDO SPARQL:")
q3 = prepareQuery("""
    SELECT ?persona ?prop WHERE{
    {?persona ?prop ?valor.
    ?persona rdf:type ns:Person}
    UNION
    {?valor rdfs:subClassOf* ns:Person.
    ?persona rdf:type ?valor.
    ?persona ?prop ?otrovalor}
    }
""", initNs={"ns":ns})

# Visualize the results

for r in g.query(q3):
    print(r.persona,r.prop)