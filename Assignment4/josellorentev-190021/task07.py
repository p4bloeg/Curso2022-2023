# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kJFE4oN_vSmXhcwltP6GrgtRp7_pQNJm

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

# TO DO
ns =Namespace("http://somewhere#")
vcard =Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
rdfs =Namespace("http://www.w3.org/2000/01/rdf-schema#")
# Visualize the results
print("RDFlib")
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s)

print("SPARQL")
from rdflib.plugins.sparql import prepareQuery

q1 = prepareQuery('''
  Select ?s where { 
    ?s RDFS:subClassOf ns:Person
  } 
  ''',
  initNs= {"RDFS": rdfs, "ns":ns})

for r in g.query(q1):
  print(r.s)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
print("RDFlib")
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for sP,pP,oP in g.triples((None, RDF.type, s)):
    print(sP)

print("SPARQL")

q2 = prepareQuery('''
  Select Distinct ?p where { 
    ?s RDFS:subClassOf* ns:Person.
    ?p <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?s
  } 
  ''',
  initNs= {"RDFS":rdfs, "ns":ns})

for r in g.query(q2):
  print(r.p)
# Visualize the results

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# TO DO
print("RDFlib")
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for sP,pP,oP in g.triples((None, RDF.type, s)):
    for sP2,pP2, oP2 in g.triples((sP, None, None)):
      print(sP2,pP2,oP2)

print("SPARQL")

q3 = prepareQuery('''
  Select Distinct ?s ?p ?o where { 
    ?subc RDFS:subClassOf* ns:Person.
    ?s <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?subc.
    ?s ?p ?o.
  } 
  ''',
  initNs= {"RDFS":rdfs, "ns":ns})

for r in g.query(q3):
  print(r.s, r.p, r.o)
# Visualize the results